# Generated by Django 4.2.1 on 2023-12-11 14:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Exam",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("logo", models.ImageField(upload_to="exam_logos/")),
                ("short_description", models.TextField(max_length=200)),
                ("detailed_description", models.TextField(max_length=500)),
                (
                    "exam_frequency",
                    models.CharField(
                        choices=[("daily", "Daily"), ("weekly", "Weekly")],
                        max_length=100,
                    ),
                ),
                (
                    "exam_mode",
                    models.CharField(
                        choices=[("online", "Online"), ("offline", "Offline")],
                        max_length=100,
                    ),
                ),
                ("exam_official_website", models.URLField()),
                ("contact_number", models.CharField(max_length=15)),
                ("email", models.EmailField(max_length=254)),
                ("brochure", models.FileField(upload_to="exam_brochures/")),
                ("brochure_description", models.TextField(max_length=500)),
                ("keywords", models.TextField(max_length=200)),
                ("registration_website", models.URLField()),
                (
                    "registration_mode",
                    models.CharField(
                        choices=[("online", "Online"), ("offline", "Offline")],
                        max_length=100,
                    ),
                ),
                ("important_news", models.TextField()),
                (
                    "news_category",
                    models.CharField(
                        choices=[
                            ("very_imp", "Very Important"),
                            ("imp", "Important"),
                            ("medium_imp", "Medium Important"),
                            ("less_imp", "Less Important"),
                        ],
                        max_length=50,
                    ),
                ),
                ("important_dates_start", models.DateField()),
                ("important_dates_end", models.DateField()),
                ("admit_card_release_date", models.DateField()),
                ("result_date", models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name="ExamDate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name="ExamPattern",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("excel_file", models.FileField(upload_to="exam_patterns/")),
                ("degree_branch", models.CharField(max_length=255)),
                (
                    "mode_of_examination",
                    models.CharField(
                        choices=[("online", "Online"), ("offline", "Offline")],
                        max_length=100,
                    ),
                ),
                (
                    "duration_of_examination",
                    models.CharField(
                        choices=[
                            ("1_hour", "1 Hour"),
                            ("2_hours", "2 Hours"),
                            ("3_hours", "3 Hours"),
                        ],
                        max_length=100,
                    ),
                ),
                ("number_of_questions", models.IntegerField()),
                ("total_marks", models.IntegerField()),
                ("subjects_sections", models.TextField()),
                ("medium_of_paper", models.TextField()),
                ("describe_type_of_questions", models.TextField()),
                ("describe_marking_scheme", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="FAQ",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question", models.TextField()),
                ("answer", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="Link",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("url", models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name="PaymentMode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="RegistrationCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="State",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="StudyMaterial",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("media_file", models.FileField(upload_to="study_materials/")),
                ("description", models.TextField(max_length=500)),
                ("keywords_meta_tags", models.TextField()),
                (
                    "material_category",
                    models.CharField(
                        choices=[
                            ("books", "Books"),
                            ("videos", "Videos"),
                            ("pdf", "PDF"),
                        ],
                        max_length=255,
                    ),
                ),
                (
                    "exam_who_can_refer",
                    models.ManyToManyField(
                        related_name="referenced_materials", to="exam.exam"
                    ),
                ),
                (
                    "links",
                    models.ManyToManyField(
                        related_name="study_materials", to="exam.link"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PreviousYearPaper",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pdf_files", models.FileField(upload_to="previous_year_papers/")),
                ("year_of_paper", models.IntegerField()),
                ("date_of_paper", models.DateField()),
                (
                    "mode_of_paper",
                    models.CharField(
                        choices=[("online", "Online"), ("offline", "Offline")],
                        max_length=100,
                    ),
                ),
                ("description_to_paper", models.TextField(max_length=500)),
                (
                    "exam",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="exam.exam"
                    ),
                ),
                (
                    "links",
                    models.ManyToManyField(
                        related_name="previous_year_papers", to="exam.link"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="exam",
            name="brochure_links",
            field=models.ManyToManyField(related_name="brochures", to="exam.link"),
        ),
        migrations.AddField(
            model_name="exam",
            name="exam_dates",
            field=models.ManyToManyField(related_name="exams", to="exam.examdate"),
        ),
        migrations.AddField(
            model_name="exam",
            name="exam_patterns",
            field=models.ManyToManyField(related_name="exams", to="exam.exampattern"),
        ),
        migrations.AddField(
            model_name="exam",
            name="exams_who_can_refer",
            field=models.ManyToManyField(
                related_name="referring_exams", to="exam.exam"
            ),
        ),
        migrations.AddField(
            model_name="exam",
            name="faqs",
            field=models.ManyToManyField(related_name="exams", to="exam.faq"),
        ),
        migrations.AddField(
            model_name="exam",
            name="other_links",
            field=models.ManyToManyField(related_name="exams", to="exam.link"),
        ),
        migrations.AddField(
            model_name="exam",
            name="payment_modes",
            field=models.ManyToManyField(related_name="exams", to="exam.paymentmode"),
        ),
        migrations.AddField(
            model_name="exam",
            name="previous_year_papers",
            field=models.ManyToManyField(
                related_name="exams", to="exam.previousyearpaper"
            ),
        ),
        migrations.AddField(
            model_name="exam",
            name="registration_categories",
            field=models.ManyToManyField(
                related_name="exams", to="exam.registrationcategory"
            ),
        ),
        migrations.AddField(
            model_name="exam",
            name="states_applicable",
            field=models.ManyToManyField(related_name="exams", to="exam.state"),
        ),
        migrations.AddField(
            model_name="exam",
            name="study_materials",
            field=models.ManyToManyField(related_name="exams", to="exam.studymaterial"),
        ),
    ]
